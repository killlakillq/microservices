version: '3'
services:
  gateway:
    build: ./gateway
    restart: always
    hostname: gateway
    env_file:
      - .env
    ports:
      - "8000:8000"
    networks:
      - backend
      - frontend
  authentication:
    build: ./authentication
    restart: always
    hostname: authentication
    env_file:
      - .env
    networks:
      - backend
    links:
      - authenticationdb
      - cache
  account:
    build: ./account
    restart: always
    hostname: account
    env_file:
      - .env
    networks:
      - backend
    links:
      - accountdb
  accountdb:
    image: 'postgres:latest'
    restart: always
    environment:
      - ACCOUNT_POSTGRES_HOST=${POSTGRES_HOST}
      - ACCOUNT_POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - ACCOUNT_POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ACCOUNT_POSTGRES_DATABASE=${ACCOUNT_POSTGRES_DATABASE}
    volumes:
      - "./db/data/db-files:/data/db"
      - "./db/init/:/docker-entrypoint-initdb.d/"
    ports:
      - 5432:5432
    networks:
      - backend
  authenticationdb:
    image: 'postgres:latest'
    restart: always
    environment:
      - AUTH_POSTGRES_HOST=$POSTGRES_HOST}
      - AUTH_POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - AUTH_POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - AUTH_POSTGRES_DATABASE=${AUTH_POSTGRES_DATABASE}
    volumes:
      - "./db/data/db-files:/data/db"
      - "./db/init/:/docker-entrypoint-initdb.d/"
    ports:
      - 5432:5432
    networks:
      - backend
  cache:
    image: 'redis:latest'
    restart: always
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_USERNAME=${REDIS_USERNAME}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DATABASE=${REDIS_DATABASE}
    ports:
      - 32772:32772
    networks:
      - backend
networks:
  backend:
    driver: bridge
  frontend:
    name: infrastructure